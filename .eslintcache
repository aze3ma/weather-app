[{"/Users/aze3ma/workspace/weather-app/src/App.tsx":"1","/Users/aze3ma/workspace/weather-app/src/index.tsx":"2","/Users/aze3ma/workspace/weather-app/src/components/Search.tsx":"3","/Users/aze3ma/workspace/weather-app/src/components/WeatherDetails.tsx":"4","/Users/aze3ma/workspace/weather-app/src/theme.ts":"5","/Users/aze3ma/workspace/weather-app/src/components/Empty.tsx":"6","/Users/aze3ma/workspace/weather-app/src/slices/weatherSlice.ts":"7","/Users/aze3ma/workspace/weather-app/src/utils/APIService.ts":"8","/Users/aze3ma/workspace/weather-app/src/queries/index.ts":"9","/Users/aze3ma/workspace/weather-app/src/store/index.ts":"10","/Users/aze3ma/workspace/weather-app/src/types/index.ts":"11"},{"size":1024,"mtime":1610818156976,"results":"12","hashOfConfig":"13"},{"size":352,"mtime":1610759217767,"results":"14","hashOfConfig":"13"},{"size":1831,"mtime":1610813956136,"results":"15","hashOfConfig":"13"},{"size":3152,"mtime":1610818958764,"results":"16","hashOfConfig":"13"},{"size":288,"mtime":1610734335068,"results":"17","hashOfConfig":"13"},{"size":533,"mtime":1610816530755,"results":"18","hashOfConfig":"13"},{"size":1266,"mtime":1610817996221,"results":"19","hashOfConfig":"13"},{"size":227,"mtime":1610813036678,"results":"20","hashOfConfig":"13"},{"size":758,"mtime":1610812462913,"results":"21","hashOfConfig":"13"},{"size":255,"mtime":1610814461679,"results":"22","hashOfConfig":"13"},{"size":717,"mtime":1610816226404,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"k3z2ny",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aze3ma/workspace/weather-app/src/App.tsx",["48","49","50","51","52"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport _ from 'lodash'\n\nimport { ThemeProvider } from 'theme-ui'\n\nimport { Container, Spinner } from 'theme-ui'\nimport Search from './components/Search'\nimport Empty from './components/Empty'\nimport WeatherDetails from './components/WeatherDetails'\n\nimport { fetchWeatherByCity } from './slices/weatherSlice'\nimport { QueryParams } from './types'\n\nimport theme from './theme'\n\nconst App: React.FunctionComponent = (): React.ReactElement => {\n    const { data, loading, error } = useSelector((state) => state.weather)\n    const dispatch = useDispatch()\n\n    const searchHandler = (values: QueryParams): void => {\n        dispatch(fetchWeatherByCity(values))\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container px={6} py={6}>\n                <Search searchHandler={searchHandler} />\n                {data && <WeatherDetails {...data} />}\n            </Container>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/aze3ma/workspace/weather-app/src/index.tsx",[],"/Users/aze3ma/workspace/weather-app/src/components/Search.tsx",[],"/Users/aze3ma/workspace/weather-app/src/components/WeatherDetails.tsx",["53","54","55"],"/Users/aze3ma/workspace/weather-app/src/theme.ts",[],"/Users/aze3ma/workspace/weather-app/src/components/Empty.tsx",[],"/Users/aze3ma/workspace/weather-app/src/slices/weatherSlice.ts",["56","57","58","59","60"],"import { createSlice, createAsyncThunk, AsyncThunkAction, AsyncThunk } from '@reduxjs/toolkit'\nimport API from '../utils/APIService'\nimport { GET_CITY_BY_NAME } from '../queries'\nimport { APIData, QueryParams } from '../types'\n\ninterface IState {\n    loading: boolean\n    error: string\n    data: APIData\n}\n\nexport const initialState = {\n    loading: false,\n    error: '',\n    data: null,\n}\n\nexport const fetchWeatherByCity: any = createAsyncThunk('weather/fetchWeatherByCity', (variables, thunkAPI) => {\n    return API.request(GET_CITY_BY_NAME, variables).then((response) => {\n        return response.getCityByName\n    })\n})\n\nconst weatherSlice = createSlice({\n    name: 'weather',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchWeatherByCity.pending]: (state) => {\n            state.loading = true\n        },\n        [fetchWeatherByCity.rejected]: (state, action) => {\n            state.data = action.payload\n            state.loading = false\n            state.error = ''\n        },\n        [fetchWeatherByCity.fulfilled]: (state, action) => {\n            state.loading = false\n            state.data = action.payload\n        },\n    },\n})\n\nexport const weatherSelector = (state: IState): IState => state\n\nexport default weatherSlice.reducer\n","/Users/aze3ma/workspace/weather-app/src/utils/APIService.ts",[],"/Users/aze3ma/workspace/weather-app/src/queries/index.ts",[],"/Users/aze3ma/workspace/weather-app/src/store/index.ts",[],"/Users/aze3ma/workspace/weather-app/src/types/index.ts",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":9},{"ruleId":"61","severity":1,"message":"65","line":7,"column":21,"nodeType":"63","messageId":"64","endLine":7,"endColumn":28},{"ruleId":"61","severity":1,"message":"66","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":13},{"ruleId":"61","severity":1,"message":"67","line":18,"column":19,"nodeType":"63","messageId":"64","endLine":18,"endColumn":26},{"ruleId":"61","severity":1,"message":"68","line":18,"column":28,"nodeType":"63","messageId":"64","endLine":18,"endColumn":33},{"ruleId":"61","severity":1,"message":"69","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"61","severity":1,"message":"70","line":8,"column":5,"nodeType":"63","messageId":"64","endLine":8,"endColumn":15},{"ruleId":"61","severity":1,"message":"71","line":9,"column":5,"nodeType":"63","messageId":"64","endLine":9,"endColumn":23},{"ruleId":"61","severity":1,"message":"72","line":1,"column":41,"nodeType":"63","messageId":"64","endLine":1,"endColumn":57},{"ruleId":"61","severity":1,"message":"73","line":1,"column":59,"nodeType":"63","messageId":"64","endLine":1,"endColumn":69},{"ruleId":"61","severity":1,"message":"74","line":4,"column":19,"nodeType":"63","messageId":"64","endLine":4,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":18,"column":34,"nodeType":"77","messageId":"78","endLine":18,"endColumn":37,"suggestions":"79"},{"ruleId":"61","severity":1,"message":"80","line":18,"column":99,"nodeType":"63","messageId":"64","endLine":18,"endColumn":107},"@typescript-eslint/no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'Empty' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'WiFahrenheit' is defined but never used.","'WiDaySunny' is defined but never used.","'WiDaySunnyOvercast' is defined but never used.","'AsyncThunkAction' is defined but never used.","'AsyncThunk' is defined but never used.","'QueryParams' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],"'thunkAPI' is defined but never used.",{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},"suggestUnknown",{"range":"89","text":"90"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"89","text":"91"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[424,427],"unknown","never"]